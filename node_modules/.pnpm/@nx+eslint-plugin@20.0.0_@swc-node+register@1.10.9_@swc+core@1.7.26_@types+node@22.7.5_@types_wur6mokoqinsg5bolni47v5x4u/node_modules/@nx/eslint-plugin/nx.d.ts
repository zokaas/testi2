declare const plugin: {
    configs: {};
    rules: {
        "enforce-module-boundaries": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./src/rules/enforce-module-boundaries").MessageIds, [{
            allow: string[];
            buildTargets: string[];
            depConstraints: import("./src/utils/runtime-lint-utils").DepConstraint[];
            enforceBuildableLibDependency: boolean;
            allowCircularSelfDependency: boolean;
            ignoredCircularDependencies: Array<[string, string]>;
            checkDynamicDependenciesExceptions: string[];
            banTransitiveDependencies: boolean;
            checkNestedExternalImports: boolean;
        }], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
        "nx-plugin-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./src/rules/nx-plugin-checks").MessageIds, [{
            generatorsJson?: string;
            executorsJson?: string;
            migrationsJson?: string;
            packageJson?: string;
            allowedVersionStrings: string[];
        }], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
        "dependency-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./src/rules/dependency-checks").MessageIds, import("./src/rules/dependency-checks").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    };
};
export default plugin;
